{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Liliya\\\\Desktop\\\\frontend\\\\simple-blog\\\\pages\\\\posts\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nvar fetcher = function fetcher(url) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n\n          if (!(res.status !== 200)) {\n            _context.next = 8;\n            break;\n          }\n\n          throw new Error(data.message);\n\n        case 8:\n          return _context.abrupt(\"return\", data);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function Person() {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR(function () {\n    return query.id && \"/api/people/\".concat(query.id);\n  }, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, error.message);\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Name\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Height\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Mass\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Hair color\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Skin color\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Eye color\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Gender\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, data.name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, data.height), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, data.mass), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, data.hair_color), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, data.skin_color), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, data.eye_color), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, data.gender))));\n}","map":{"version":3,"sources":["C:/Users/Liliya/Desktop/frontend/simple-blog/pages/posts/[id].js"],"names":["useRouter","useSWR","fetcher","url","fetch","res","json","data","status","Error","message","Person","query","id","error","name","height","mass","hair_color","skin_color","eye_color","gender"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIC,KAAK,CAACD,GAAD,CADT;;AAAA;AACRE,UAAAA,GADQ;AAAA;AAAA,2CAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERC,UAAAA,IAFQ;;AAAA,gBAIVF,GAAG,CAACG,MAAJ,KAAe,GAJL;AAAA;AAAA;AAAA;;AAAA,gBAKN,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAf,CALM;;AAAA;AAAA,2CAOPH,IAPO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAUA,eAAe,SAASI,MAAT,GAAkB;AAAA,mBACbX,SAAS,EADI;AAAA,MACvBY,KADuB,cACvBA,KADuB;;AAAA,gBAEPX,MAAM,CAC5B;AAAA,WAAMW,KAAK,CAACC,EAAN,0BAA2BD,KAAK,CAACC,EAAjC,CAAN;AAAA,GAD4B,EAE5BX,OAF4B,CAFC;AAAA,MAEvBK,IAFuB,WAEvBA,IAFuB;AAAA,MAEjBO,KAFiB,WAEjBA,KAFiB;;AAO/B,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACJ,OAAZ,CAAP;AACX,MAAI,CAACH,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACQ,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACS,MAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAI,CAACU,IAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,IAAI,CAACW,UAAV,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,IAAI,CAACY,UAAV,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAI,CAACa,SAAV,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACc,MAAV,CAPF,CADF,CAZF,CADF;AA0BD","sourcesContent":["import { useRouter } from 'next/router';\r\nimport useSWR from 'swr';\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nexport default function Person() {\r\n  const { query } = useRouter();\r\n  const { data, error } = useSWR(\r\n    () => query.id && `/api/people/${query.id}`,\r\n    fetcher\r\n  );\r\n\r\n  if (error) return <div>{error.message}</div>;\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Height</th>\r\n          <th>Mass</th>\r\n          <th>Hair color</th>\r\n          <th>Skin color</th>\r\n          <th>Eye color</th>\r\n          <th>Gender</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{data.name}</td>\r\n          <td>{data.height}</td>\r\n          <td>{data.mass}</td>\r\n          <td>{data.hair_color}</td>\r\n          <td>{data.skin_color}</td>\r\n          <td>{data.eye_color}</td>\r\n          <td>{data.gender}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}