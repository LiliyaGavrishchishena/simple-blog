{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liliya\\\\Desktop\\\\frontend\\\\simple-blog\\\\pages\\\\posts\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport { useDispatch } from 'react-redux';\nimport { withRedux } from '../../lib/redux';\nimport { types } from '../../store/posts';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport Layout from '../../components/Layout';\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.2rem;\n  align-items: flex-start;\n  height: 64px;\n  padding: 2rem 1rem;\n  color: black;\n`;\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  if (res.status !== 200) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nfunction Post() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(() => query.id && `/api/posts/${query.id}`, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, error.message);\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n\n  if (data) {\n    const dispatch = useDispatch();\n    dispatch({\n      type: types.GET_POST,\n      payload: data\n    });\n  }\n\n  return __jsx(Layout, {\n    title: \"Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"The GL Blog\"))), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"ID\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"TITLE\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"BODY\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, data.id), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, data.title), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, data.body)))));\n}\n\nexport default withRedux(Post);","map":{"version":3,"sources":["C:/Users/Liliya/Desktop/frontend/simple-blog/pages/posts/[id].js"],"names":["useRouter","useSWR","useDispatch","withRedux","types","Link","styled","Layout","Nav","nav","fetcher","url","res","fetch","data","json","status","Error","message","Post","query","error","id","dispatch","type","GET_POST","payload","title","body"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,GAAG,GAAGF,MAAM,CAACG,GAAI;;;;;;;;CAAvB;;AAUA,MAAMC,OAAO,GAAG,MAAOC,GAAP,IAAe;AAC7B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AAEA,MAAIH,GAAG,CAACI,MAAJ,KAAe,GAAnB,EAAwB;AACtB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACD;;AACD,SAAOJ,IAAP;AACD,CARD;;AAUA,SAASK,IAAT,GAAgB;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAYpB,SAAS,EAA3B;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQO,IAAAA;AAAR,MAAkBpB,MAAM,CAC5B,MAAMmB,KAAK,CAACE,EAAN,IAAa,cAAaF,KAAK,CAACE,EAAG,EADb,EAE5BZ,OAF4B,CAA9B;AAKA,MAAIW,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACH,OAAZ,CAAP;AACX,MAAI,CAACJ,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;;AAEX,MAAIA,IAAJ,EAAU;AACR,UAAMS,QAAQ,GAAGrB,WAAW,EAA5B;AACAqB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEpB,KAAK,CAACqB,QADL;AAEPC,MAAAA,OAAO,EAAEZ;AAFF,KAAD,CAAR;AAID;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACQ,EAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAACa,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACc,IAAV,CAHF,CADF,CARF,CANF,CADF;AAyBD;;AAED,eAAezB,SAAS,CAACgB,IAAD,CAAxB","sourcesContent":["import { useRouter } from 'next/router';\r\nimport useSWR from 'swr';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRedux } from '../../lib/redux';\r\nimport { types } from '../../store/posts';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/Layout';\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.2rem;\r\n  align-items: flex-start;\r\n  height: 64px;\r\n  padding: 2rem 1rem;\r\n  color: black;\r\n`;\r\n\r\nconst fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  if (res.status !== 200) {\r\n    throw new Error(data.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nfunction Post() {\r\n  const { query } = useRouter();\r\n  const { data, error } = useSWR(\r\n    () => query.id && `/api/posts/${query.id}`,\r\n    fetcher\r\n  );\r\n\r\n  if (error) return <div>{error.message}</div>;\r\n  if (!data) return <div>Loading...</div>;\r\n\r\n  if (data) {\r\n    const dispatch = useDispatch();\r\n    dispatch({\r\n      type: types.GET_POST,\r\n      payload: data,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Id\">\r\n      <Nav>\r\n        <Link href=\"/\">\r\n          <a>The GL Blog</a>\r\n        </Link>\r\n      </Nav>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>TITLE</th>\r\n            <th>BODY</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{data.id}</td>\r\n            <td>{data.title}</td>\r\n            <td>{data.body}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default withRedux(Post);\r\n"]},"metadata":{},"sourceType":"module"}