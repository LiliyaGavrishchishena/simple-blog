{"ast":null,"code":"// import { useRouter } from 'next/router';\n// import useSWR from 'swr';\n// import { useDispatch } from 'react-redux';\n// import { withRedux } from '../../lib/redux';\n// import { types } from '../../store/posts';\n// const fetcher = async (url) => {\n//   const res = await fetch(url);\n//   const data = await res.json();\n//   if (res.status !== 200) {\n//     throw new Error(data.message);\n//   }\n//   return data;\n// };\n// function Post() {\n//   const { query } = useRouter();\n//   const { data, error } = useSWR(\n//     () => query.id && `/api/posts/${query.id}`,\n//     fetcher\n//   );\n//   if (error) return <div>{error.message}</div>;\n//   if (!data) return <div>Loading...</div>;\n//   if (data) {\n//     const dispatch = useDispatch();\n//     dispatch({\n//       type: types.GET_POST,\n//       payload: data,\n//     });\n//   }\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>ID</th>\n//           <th>TITLE</th>\n//           <th>BODY</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         <tr>\n//           <td>{data.id}</td>\n//           <td>{data.title}</td>\n//           <td>{data.body}</td>\n//         </tr>\n//       </tbody>\n//     </table>\n//   );\n// }\n// export default withRedux(Post);","map":{"version":3,"sources":["C:/Users/Liliya/Desktop/frontend/simple-blog/pages/posts/[id].js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import { useRouter } from 'next/router';\r\n// import useSWR from 'swr';\r\n// import { useDispatch } from 'react-redux';\r\n// import { withRedux } from '../../lib/redux';\r\n// import { types } from '../../store/posts';\r\n\r\n// const fetcher = async (url) => {\r\n//   const res = await fetch(url);\r\n//   const data = await res.json();\r\n\r\n//   if (res.status !== 200) {\r\n//     throw new Error(data.message);\r\n//   }\r\n//   return data;\r\n// };\r\n\r\n// function Post() {\r\n//   const { query } = useRouter();\r\n//   const { data, error } = useSWR(\r\n//     () => query.id && `/api/posts/${query.id}`,\r\n//     fetcher\r\n//   );\r\n\r\n//   if (error) return <div>{error.message}</div>;\r\n//   if (!data) return <div>Loading...</div>;\r\n\r\n//   if (data) {\r\n//     const dispatch = useDispatch();\r\n//     dispatch({\r\n//       type: types.GET_POST,\r\n//       payload: data,\r\n//     });\r\n//   }\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           <th>ID</th>\r\n//           <th>TITLE</th>\r\n//           <th>BODY</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         <tr>\r\n//           <td>{data.id}</td>\r\n//           <td>{data.title}</td>\r\n//           <td>{data.body}</td>\r\n//         </tr>\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// export default withRedux(Post);\r\n"]},"metadata":{},"sourceType":"script"}