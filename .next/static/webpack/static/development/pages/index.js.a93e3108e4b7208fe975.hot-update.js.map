{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a93e3108e4b7208fe975.hot-update.js","sources":["webpack:///./lib/redux.js"],"sourcesContent":["import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { initializeStore } from '../store';\r\nimport App from 'next/app';\r\n\r\nexport const withRedux = (PageComponent, { ssr = true } = {}) => {\r\n    const WithRedux = ({ initialReduxState, ...props }) => {\r\n        const store = getOrInitializeStore(initialReduxState);\r\n        return (\r\n            <Provider store={store}>\r\n                <PageComponent {...props} />\r\n            </Provider>\r\n        );\r\n    };\r\n\r\n    // Make sure people don't use this HOC on _app.js level\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const isAppHoc = PageComponent === App || PageComponent.prototype instanceof App;\r\n        if (isAppHoc) {\r\n            throw new Error('The withRedux HOC only works with PageComponents');\r\n        }\r\n    }\r\n\r\n    // Set the correct displayName in development\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        const displayName = PageComponent.displayName || PageComponent.name || 'Component';\r\n\r\n        WithRedux.displayName = `withRedux(${displayName})`;\r\n    }\r\n\r\n    if (ssr || PageComponent.getInitialProps) {\r\n        WithRedux.getInitialProps = async (context) => {\r\n            // Get or Create the store with `undefined` as initialState\r\n            // This allows you to set a custom default initialState\r\n            const reduxStore = getOrInitializeStore();\r\n\r\n            // Provide the store to getInitialProps of pages\r\n            context.reduxStore = reduxStore;\r\n\r\n            // Run getInitialProps from HOCed PageComponent\r\n            const pageProps =\r\n                typeof PageComponent.getInitialProps === 'function' ? await PageComponent.getInitialProps(context) : {};\r\n\r\n            // Pass props to PageComponent\r\n            return {\r\n                ...pageProps,\r\n                initialReduxState: reduxStore.getState(),\r\n            };\r\n        };\r\n    }\r\n\r\n    return WithRedux;\r\n};\r\n\r\nlet reduxStore;\r\nconst getOrInitializeStore = (initialState) => {\r\n    // Always make a new store if server, otherwise state is shared between requests\r\n    if (typeof window === 'undefined') {\r\n        return initializeStore(initialState);\r\n    }\r\n\r\n    // Create store if unavailable on the client and set it on the window object\r\n    if (!reduxStore) {\r\n        reduxStore = initializeStore(initialState);\r\n    }\r\n\r\n    return reduxStore;\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AASA;AATA;AAeA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}